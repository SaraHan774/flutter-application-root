rules_version='2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 프로필 규칙
    match /users/{userId} {
      // 사용자는 자신의 프로필만 읽고 쓸 수 있음
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // 프로필 생성 시에는 인증된 사용자만 가능
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // 매칭 데이터 규칙
    match /matchings/{matchingId} {
      // 매칭에 참여한 사용자만 읽기 가능
      allow read: if request.auth != null && 
        (resource.data.userA == request.auth.uid || resource.data.userB == request.auth.uid);
      
      // 매칭 생성은 서버에서만 가능 (Cloud Functions)
      allow write: if false;
    }
    
    // 채팅방 규칙
    match /chatRooms/{chatRoomId} {
      // 채팅방 참여자만 읽기 가능
      allow read: if request.auth != null && 
        (resource.data.participantA == request.auth.uid || resource.data.participantB == request.auth.uid);
      
      // 채팅방 생성은 서버에서만 가능
      allow write: if false;
      
      // 채팅 메시지 규칙
      match /messages/{messageId} {
        // 채팅방 참여자만 메시지 읽기/쓰기 가능
        allow read, write: if request.auth != null && 
          (get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.participantA == request.auth.uid || 
           get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.participantB == request.auth.uid);
      }
    }
    
    // 피드백 규칙
    match /feedbacks/{feedbackId} {
      // 피드백 작성자만 읽기/쓰기 가능
      allow read, write: if request.auth != null && resource.data.fromUserId == request.auth.uid;
    }
    
    // 연결 요청 규칙
    match /connectionRequests/{requestId} {
      // 요청 관련 사용자만 읽기 가능
      allow read: if request.auth != null && 
        (resource.data.userA == request.auth.uid || resource.data.userB == request.auth.uid);
      
      // 요청 생성은 인증된 사용자만 가능
      allow create: if request.auth != null;
    }
    
    // 친구 관계 규칙
    match /friendships/{friendshipId} {
      // 친구 관계에 있는 사용자만 읽기 가능
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || resource.data.friendId == request.auth.uid);
    }
  }
}
